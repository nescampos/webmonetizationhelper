class WebMonetization { constructor(t) { this.pointer = t } isBrowserEnabled() { return !!document.monetization } getMonetizationState() { return document.monetization ? document.monetization.state : "Not enabled in browser" } isPendingState() { return document.monetization && "pending" === document.monetization.state } isStartedState() { return document.monetization && "started" === document.monetization.state } isStoppedState() { return document.monetization && "stopped" === document.monetization.state } isUndefinedState() { return void 0 === document.monetization } start() { if (!document.querySelector('meta[name="monetization"]')) { var t = document.createElement("meta"); t.name = "monetization", t.content = this.pointer, document.getElementsByTagName("head")[0].appendChild(t) } } changePointer(t) { this.pointer = t; const e = document.querySelector('meta[name="monetization"]'); e && (e.content = this.pointer) } registerStartListener(t) { document.monetization && document.monetization.addEventListener("monetizationstart", t()) } registerProgressListener(t) { document.monetization && document.monetization.addEventListener("monetizationprogress", t()) } registerStopListener(t) { document.monetization && document.monetization.addEventListener("monetizationstop", t()) } registerPendingListener(t) { document.monetization && document.monetization.addEventListener("monetizationpending", t()) } stop() { const t = document.querySelector('meta[name="monetization"]'); t && t.remove() } }